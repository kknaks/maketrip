<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="project.tripMaker.dao.BoardQuestionDao">

    <resultMap id="BoardMap" type="project.tripMaker.vo.Board">
        <id property="boardNo" column="board_no"/>
        <result property="tmpNo" column="tmp_no"/>
        <result property="boardtypeNo" column="boardtype_no"/>
        <result property="boardTitle" column="board_title"/>
        <result property="boardCount" column="board_count"/>
        <result property="boardCreatedDate" column="board_created_date"/>
        <result property="tripNo" column="trip_no"/>
        <result property="userNo" column="user_no"/>
        <result property="boardContent" column="board_content"/>
        <result property="boardTag" column="board_tag"/>
        <result property="boardLike" column="like_count"/>
        <result property="boardFavor" column="favor_count"/>

        <association property="writer" javaType="project.tripMaker.vo.User">
            <id property="userNo" column="user_no" javaType="java.lang.Long"/>
            <result property="userNickname" column="user_nickname"/>
            <result property="userPhoto" column="user_photo"/>
        </association>

        <collection property="comments" ofType="project.tripMaker.vo.Comment">
            <id property="commentNo" column="comment_no"/>
            <result property="boardNo" column="board_no"/>
            <result property="userNo" column="user_no" javaType="java.lang.Long"/>
            <result property="commentContent" column="comment_content"/>
            <result property="commentCreatedDate" column="comment_created_date"/>
        </collection>

    </resultMap>

    <select id="list" resultMap="BoardMap">
        SELECT
            @rownum := @rownum + 1 AS tmp_no,  -- 가상 번호 부여
            b.board_no,
            b.board_title,
            b.board_created_date,
            b.board_count,
            b.board_tag,
            u.user_no,
            u.user_nickname,
            u.user_photo,
            COALESCE(fv.favor_count, 0) AS favor_count,
            COALESCE(bl.like_count, 0) AS like_count
        FROM
                (SELECT @rownum := 0) r,  -- 변수 초기화
                board b
                    left outer join user u on
                    b.user_no = u.user_no
                    LEFT JOIN
                favor_count_view fv ON b.board_no = fv.board_no
                    LEFT JOIN
                boardlike_count_view bl ON b.board_no = bl.board_no
        WHERE
            b.boardtype_no = 1
        ORDER BY
            b.board_no DESC
        LIMIT
            #{rowNo}, #{length}
    </select>

    <insert id="insert" parameterType="board"
            useGeneratedKeys="true" keyColumn="board_no" keyProperty="boardNo">
        insert into board(
            boardtype_no,
            board_title,
            user_no,
            trip_no,
            board_content,
            board_tag)
        values (
                   1,
                   #{boardTitle},
                   #{writer.userNo},
                   1,
                   #{boardContent},
                   #{boardTag})
    </insert>

    <select id="findBy" resultMap="BoardMap" parameterType="int">
        select
            b.board_no,
            b.boardtype_no,
            b.board_title,
            b.board_count,
            b.board_created_date,
            b.trip_no,
            b.board_content,
            b.board_tag,
            b.user_no,
            u.user_photo,
            u.user_nickname,
            c.user_no,
            c.comment_no,
            c.comment_content,
            c.comment_created_date,
            COALESCE(fv.favor_count, 0) AS favor_count,
            COALESCE(bl.like_count, 0) AS like_count
        from
            board b
                inner join user u on b.user_no=u.user_no
                left outer join comment c on c.board_no=b.board_no
                LEFT JOIN favor_count_view fv ON b.board_no = fv.board_no
                LEFT JOIN boardlike_count_view bl ON b.board_no = bl.board_no
        where
            b.board_no=#{boardNo}
    </select>

    <update id="update" parameterType="board">
        update board set
                         board_title=#{boardTitle},
                         board_content=#{boardContent},
                         board_tag=#{boardTag}
        where
            board_no=#{boardNo}
    </update>

    <delete id="delete" parameterType="int">
        delete from board
        where board_no=#{boardNo}
    </delete>

    <update id="updateBoardCount">
        update board set
            board_count=#{boardCount}
        where board_no=#{boardNo}
    </update>

    <select id="listLike" resultMap="BoardMap">
        SELECT
            @rownum := @rownum + 1 AS tmp_no,  -- 가상 번호 부여
            b.board_no,
            b.board_title,
            b.board_created_date,
            b.board_count,
            b.board_tag,
            u.user_no,
            u.user_nickname,
            COALESCE(fv.favor_count, 0) AS favor_count,
            COALESCE(bl.like_count, 0) AS like_count
        FROM
                (SELECT @rownum := 0) r,  -- 변수 초기화
                board b
                    INNER JOIN
                user u ON b.user_no = u.user_no
                    LEFT JOIN
                favor_count_view fv ON b.board_no = fv.board_no
                    LEFT JOIN
                boardlike_count_view bl ON b.board_no = bl.board_no
        WHERE
            b.boardtype_no = 1
        ORDER BY
            like_count DESC, b.board_no ASC
        LIMIT
            #{rowNo}, #{length}
    </select>

    <select id="listFavor" resultMap="BoardMap">
        SELECT
            @rownum := @rownum + 1 AS tmp_no,  -- 가상 번호 부여
            b.board_no,
            b.board_title,
            b.board_created_date,
            b.board_count,
            b.board_tag,
            u.user_no,
            u.user_nickname,
            COALESCE(fv.favor_count, 0) AS favor_count,
            COALESCE(bl.like_count, 0) AS like_count
        FROM
                (SELECT @rownum := 0) r,  -- 변수 초기화
                board b
                    INNER JOIN
                user u ON b.user_no = u.user_no
                    LEFT JOIN
                favor_count_view fv ON b.board_no = fv.board_no
                    LEFT JOIN
                boardlike_count_view bl ON b.board_no = bl.board_no
        WHERE
            b.boardtype_no = 1
        ORDER BY
            favor_count DESC, b.board_no ASC
        LIMIT
            #{rowNo}, #{length}
    </select>

    <select id="listView" resultMap="BoardMap">
        SELECT
            @rownum := @rownum + 1 AS tmp_no,  -- 가상 번호 부여
            b.board_no,
            b.board_title,
            b.board_created_date,
            b.board_count,
            b.board_tag,
            u.user_no,
            u.user_nickname,
            COALESCE(fv.favor_count, 0) AS favor_count,
            COALESCE(bl.like_count, 0) AS like_count
        FROM
                (SELECT @rownum := 0) r,  -- 변수 초기화
                board b
                    INNER JOIN
                user u ON b.user_no = u.user_no
                    LEFT JOIN
                favor_count_view fv ON b.board_no = fv.board_no
                    LEFT JOIN
                boardlike_count_view bl ON b.board_no = bl.board_no
        WHERE
            b.boardtype_no = 1
        ORDER BY
            b.board_count DESC, b.board_no ASC
        LIMIT
            #{rowNo}, #{length}
    </select>

    <select id="countAll" resultType="int">
        select count(*)
        from board
        where boardtype_no=1
    </select>

</mapper>
