<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="project.tripMaker.dao.BoardQuestionDao">

    <resultMap id="BoardMap" type="project.tripMaker.vo.Board">
        <id property="boardNo" column="board_no"/>
        <result property="tmpNo" column="tmp_no"/>
        <result property="boardtypeNo" column="boardtype_no"/>
        <result property="boardTitle" column="board_title"/>
        <result property="boardCount" column="board_count"/>
        <result property="boardCreatedDate" column="board_created_date"/>
        <result property="tripNo" column="trip_no"/>
        <result property="userNo" column="user_no"/>
        <result property="boardContent" column="board_content"/>
        <result property="boardTag" column="board_tag"/>
        <result property="boardLike" column="like_count"/>
        <result property="boardFavor" column="favor_count"/>

        <association property="trip" javaType="project.tripMaker.vo.Trip">
            <id property="tripNo" column="trip_no"/>
            <association property="city" javaType="City">
                <id column="city_code" property="cityCode"/>
                <result column="city_name" property="cityName"/>
                <result column="city_photo" property="cityPhoto"/>
                <association property="state" javaType="State">
                    <id column="state_code" property="stateCode"/>
                    <result column="state_name" property="stateName"/>
                </association>
            </association>
        </association>

        <association property="writer" javaType="project.tripMaker.vo.User">
            <id property="userNo" column="user_no" javaType="java.lang.Long"/>
            <result property="userNickname" column="user_nickname"/>
            <result property="userPhoto" column="user_photo"/>
        </association>

        <collection property="comments" ofType="project.tripMaker.vo.Comment">
            <id property="commentNo" column="comment_no"/>
            <result property="boardNo" column="board_no"/>
            <result property="userNo" column="user_no" javaType="java.lang.Long"/>
            <result property="commentContent" column="comment_content"/>
            <result property="commentCreatedDate" column="comment_created_date"/>
        </collection>
    </resultMap>

    <resultMap id="TripResultMap" type="Trip">
        <id column="trip_no" property="tripNo"/>
        <result column="user_no" property="userNo"/>
        <result column="trip_title" property="tripTitle"/>
        <result column="start_date" property="startDate"/>
        <result column="end_date" property="endDate"/>
        <result column="trip_created_date" property="tripCreatedDate"/>
        <result column="total_day" property="totalDay"/>

        <association property="thema" javaType="Thema">
            <id column="thema_no" property="themaNo"/>
            <result column="thema_name" property="themaName"/>
        </association>

        <association property="city" javaType="City">
            <id column="city_code" property="cityCode"/>
            <result column="city_name" property="cityName"/>
            <result column="city_photo" property="cityPhoto"/>
            <association property="state" javaType="State">
                <id column="state_code" property="stateCode"/>
                <result column="state_name" property="stateName"/>
            </association>
        </association>

        <collection property="scheduleList" ofType="Schedule">
            <id column="schedule_no" property="scheduleNo"/>
            <result column="trip_no" property="tripNo"/>
            <result column="schedule_day" property="scheduleDay"/>
            <result column="schedule_route" property="scheduleRoute"/>

            <association property="location" javaType="Location">
                <id column="location_no" property="locationNo"/>
                <result column="thirdclass_code" property="thirdclassCode"/>
                <result column="city_code" property="cityCode"/>
                <result column="location_name" property="locationName"/>
                <result column="location_desc" property="locationDesc"/>
                <result column="location_photo" property="locationPhoto"/>
                <result column="location_tel" property="locationTel"/>
                <result column="location_addr" property="locationAddr"/>
                <result column="location_x" property="locationX"/>
                <result column="location_y" property="locationY"/>
                <result column="locationtype_no" property="locationtypeNo"/>
            </association>
        </collection>

    </resultMap>

    <select id="list" resultMap="BoardMap">
        SELECT
        @rownum := @rownum + 1 AS tmp_no,  -- 가상 번호 부여
        b.board_no,
        b.board_title,
        b.board_created_date,
        b.board_count,
        b.board_tag,
        b.trip_no,
        u.user_no,
        u.user_nickname,
        u.user_photo,
        COALESCE(fv.favor_count, 0) AS favor_count,
        COALESCE(bl.like_count, 0) AS like_count,
        c.city_name
        FROM
        (SELECT @rownum := 0) r,  -- 변수 초기화
        board b
        left outer join user u on
        b.user_no = u.user_no
        LEFT JOIN
        favor_count_view fv ON b.board_no = fv.board_no
        LEFT JOIN
        boardlike_count_view bl ON b.board_no = bl.board_no
        LEFT JOIN
        trip t ON b.trip_no = t.trip_no -- Trip과 Board 조인 추가
        LEFT JOIN
        city c ON t.city_code = c.city_code -- Trip과 City 조인
        WHERE
        b.boardtype_no = 1
        ORDER BY
        b.board_no DESC
        LIMIT
        #{rowNo}, #{length}
    </select>

    <insert id="insert" parameterType="board"
            useGeneratedKeys="true" keyColumn="board_no" keyProperty="boardNo">
        insert into board(
        boardtype_no,
        board_title,
        user_no,
        trip_no,
        board_content,
        board_tag)
        values (
        1,
        #{boardTitle},
        #{writer.userNo},
        #{tripNo},
        #{boardContent},
        #{boardTag})
    </insert>

    <select id="findBy" resultMap="BoardMap" parameterType="int">
        select
        b.board_no,
        b.boardtype_no,
        b.board_title,
        b.board_count,
        b.board_created_date,
        b.trip_no,
        b.board_content,
        b.board_tag,
        b.user_no,
        u.user_photo,
        u.user_nickname,
        c.user_no,
        c.comment_no,
        c.comment_content,
        c.comment_created_date,
        COALESCE(fv.favor_count, 0) AS favor_count,
        COALESCE(bl.like_count, 0) AS like_count,
        cy.city_name
        from
        board b
        inner join user u on b.user_no=u.user_no
        left outer join comment c on c.board_no=b.board_no
        LEFT JOIN favor_count_view fv ON b.board_no = fv.board_no
        LEFT JOIN boardlike_count_view bl ON b.board_no = bl.board_no
        LEFT JOIN
        trip t ON b.trip_no = t.trip_no -- Trip과 Board 조인 추가
        LEFT JOIN
        city cy ON t.city_code = cy.city_code -- Trip과 City 조인
        where
        b.board_no=#{boardNo}
    </select>

    <update id="update" parameterType="board">
        update board set
        board_title=#{boardTitle},
        board_content=#{boardContent},
        board_tag=#{boardTag}
        where
        board_no=#{boardNo}
    </update>

    <delete id="delete" parameterType="int">
        delete from board
        where board_no=#{boardNo}
    </delete>

    <update id="updateBoardCount">
        update board set
        board_count=#{boardCount}
        where board_no=#{boardNo}
    </update>

    <select id="listLike" resultMap="BoardMap">
        SELECT
        @rownum := @rownum + 1 AS tmp_no,  -- 가상 번호 부여
        b.board_no,
        b.board_title,
        b.board_created_date,
        b.board_count,
        b.board_tag,
        u.user_no,
        u.user_nickname,
        COALESCE(fv.favor_count, 0) AS favor_count,
        COALESCE(bl.like_count, 0) AS like_count,
        c.city_name -- 시도명
        FROM
        (SELECT @rownum := 0) r,  -- 변수 초기화
        board b
        INNER JOIN
        user u ON b.user_no = u.user_no
        LEFT JOIN
        favor_count_view fv ON b.board_no = fv.board_no
        LEFT JOIN
        boardlike_count_view bl ON b.board_no = bl.board_no
        LEFT JOIN
        trip t ON b.trip_no = t.trip_no -- Trip과 Board 조인 추가
        LEFT JOIN
        city c ON t.city_code = c.city_code -- Trip과 City 조인
        WHERE
        b.boardtype_no = 1
        ORDER BY
        like_count DESC, b.board_no ASC
        LIMIT
        #{rowNo}, #{length}
    </select>

    <select id="listFavor" resultMap="BoardMap">
        SELECT
        @rownum := @rownum + 1 AS tmp_no,  -- 가상 번호 부여
        b.board_no,
        b.board_title,
        b.board_created_date,
        b.board_count,
        b.board_tag,
        u.user_no,
        u.user_nickname,
        COALESCE(fv.favor_count, 0) AS favor_count,
        COALESCE(bl.like_count, 0) AS like_count,
        c.city_name -- 시도명
        FROM
        (SELECT @rownum := 0) r,  -- 변수 초기화
        board b
        INNER JOIN
        user u ON b.user_no = u.user_no
        LEFT JOIN
        favor_count_view fv ON b.board_no = fv.board_no
        LEFT JOIN
        boardlike_count_view bl ON b.board_no = bl.board_no
        LEFT JOIN
        trip t ON b.trip_no = t.trip_no -- Trip과 Board 조인 추가
        LEFT JOIN
        city c ON t.city_code = c.city_code -- Trip과 City 조인
        WHERE
        b.boardtype_no = 1
        ORDER BY
        favor_count DESC, b.board_no ASC
        LIMIT
        #{rowNo}, #{length}
    </select>

    <select id="listView" resultMap="BoardMap">
        SELECT
        @rownum := @rownum + 1 AS tmp_no,  -- 가상 번호 부여
        b.board_no,
        b.board_title,
        b.board_created_date,
        b.board_count,
        b.board_tag,
        u.user_no,
        u.user_nickname,
        COALESCE(fv.favor_count, 0) AS favor_count,
        COALESCE(bl.like_count, 0) AS like_count,
        c.city_name -- 시도명
        FROM
        (SELECT @rownum := 0) r,  -- 변수 초기화
        board b
        INNER JOIN
        user u ON b.user_no = u.user_no
        LEFT JOIN
        favor_count_view fv ON b.board_no = fv.board_no
        LEFT JOIN
        boardlike_count_view bl ON b.board_no = bl.board_no
        LEFT JOIN
        trip t ON b.trip_no = t.trip_no -- Trip과 Board 조인 추가
        LEFT JOIN
        city c ON t.city_code = c.city_code -- Trip과 City 조인
        WHERE
        b.boardtype_no = 1
        ORDER BY
        b.board_count DESC, b.board_no ASC
        LIMIT
        #{rowNo}, #{length}
    </select>

    <select id="listBoard" parameterType="int" resultMap="BoardMap">
        select
        b.board_no,
        b.board_title,
        b.board_created_date,
        b.board_count,
        b.board_tag,
        b.trip_no,
        u.user_no,
        u.user_nickname,
        u.user_photo,
        COALESCE(fv.favor_count, 0) AS favor_count,
        COALESCE(bl.like_count, 0) AS like_count,
        c.city_name -- 시도명
        from
        board b
        left outer join user u on
        b.user_no = u.user_no
        LEFT JOIN
        favor_count_view fv ON b.board_no = fv.board_no
        LEFT JOIN
        boardlike_count_view bl ON b.board_no = bl.board_no
        LEFT JOIN
        trip t ON b.trip_no = t.trip_no -- Trip과 Board 조인 추가
        LEFT JOIN
        city c ON t.city_code = c.city_code -- Trip과 City 조인
        WHERE
        boardtype_no = #{boardtypeNo}
    </select>

    <select id="getLikeCount" resultType="int" parameterType="int">
        SELECT COALESCE(like_count, 0)
        FROM boardlike_count_view
        WHERE board_no = #{boardNo}
    </select>

    <!-- 사용자가 해당 게시글에 좋아요를 눌렀는지 확인 -->
    <select id="isLiked" parameterType="map" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM boardlike
        WHERE board_no = #{boardNo} AND user_no = #{userNo}
    </select>

    <!-- 좋아요 추가 -->
    <insert id="addLike" parameterType="map">
        INSERT INTO boardlike (board_no, user_no) VALUES (#{boardNo}, #{userNo})
    </insert>

    <!-- 좋아요 삭제 -->
    <delete id="removeLike" parameterType="map">
        DELETE FROM boardlike WHERE board_no = #{boardNo} AND user_no = #{userNo}
    </delete>

    <select id="getFavorCount" resultType="int" parameterType="int">
        SELECT COALESCE(favor_count, 0)
        FROM favor_count_view
        WHERE board_no = #{boardNo}
    </select>

    <!-- 사용자가 해당 게시글에 즐겨찾기를 눌렀는지 확인 -->
    <select id="isFavored" parameterType="map" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM favor
        WHERE board_no = #{boardNo} AND user_no = #{userNo}
    </select>

    <!-- 즐겨찾기 추가 -->
    <insert id="addFavor" parameterType="map">
        INSERT INTO favor (board_no, user_no) VALUES (#{boardNo}, #{userNo})
    </insert>

    <!-- 즐겨찾기 삭제 -->
    <delete id="removeFavor" parameterType="map">
        DELETE FROM favor WHERE board_no = #{boardNo} AND user_no = #{userNo}
    </delete>

    <!--    게시글 번호를 통한 Trip 찾기-->
    <select id="findTripsByBoardNo" parameterType="int" resultMap="TripResultMap">
        SELECT
        t.trip_no,
        t.user_no,
        th.thema_no,
        th.thema_name,
        t.trip_title,
        t.start_date,
        t.end_date,
        t.trip_created_date,
        t.total_day,
        st.state_code,
        st.state_name,
        c.city_code,
        c.city_name,
        s.schedule_no,
        s.trip_no,
        s.schedule_day,
        s.schedule_route,
        l.thirdclass_code,
        l.city_code,
        l.location_name,
        l.location_desc,
        l.location_photo,
        l.location_tel,
        l.location_addr,
        l.location_x,
        l.location_y,
        l.locationtype_no
        FROM
        trip t
        LEFT OUTER JOIN thema th ON t.thema_no = th.thema_no
        LEFT OUTER JOIN city c ON t.city_code = c.city_code
        LEFT OUTER JOIN state st ON st.state_code = c.state_code
        JOIN schedule s ON t.trip_no = s.trip_no
        LEFT OUTER JOIN location l ON s.location_no = l.location_no
        JOIN board b ON b.trip_no = t.trip_no  -- 추가된 부분: trip과 board의 연결
        WHERE
        b.board_no = #{boardNo}
        ORDER BY
        s.schedule_no ASC
    </select>

    <select id="searchBoards" resultMap="BoardMap">
        SELECT
        @rownum := @rownum + 1 AS tmp_no,  -- 가상 번호 부여
        b.board_no,
        b.board_title,
        b.board_created_date,
        b.board_count,
        b.board_tag,
        b.trip_no,
        u.user_no,
        u.user_nickname,
        u.user_photo,
        COALESCE(fv.favor_count, 0) AS favor_count,
        COALESCE(bl.like_count, 0) AS like_count,
        c.city_name
        FROM
        (SELECT @rownum := 0) r,  -- 변수 초기화
        board b
        LEFT OUTER JOIN user u ON b.user_no = u.user_no
        LEFT JOIN favor_count_view fv ON b.board_no = fv.board_no
        LEFT JOIN boardlike_count_view bl ON b.board_no = bl.board_no
        LEFT JOIN trip t ON b.trip_no = t.trip_no
        LEFT JOIN city c ON t.city_code = c.city_code
        WHERE
        b.boardtype_no = 1
        AND (b.board_title LIKE CONCAT('%', #{search}, '%') -- 제목
        OR b.board_content LIKE CONCAT('%', #{search}, '%') -- 내용
        OR u.user_nickname LIKE CONCAT('%', #{search}, '%') -- 닉네임
        OR c.city_name LIKE CONCAT('%', #{search}, '%')) -- 장소
        ORDER BY
        b.board_no DESC
        LIMIT
        #{rowNo}, #{length}
    </select>

    <select id="searchBoardCount" resultType="int">
        SELECT COUNT(*)
        FROM board b
        LEFT JOIN user u ON b.user_no = u.user_no
        LEFT JOIN trip t ON b.trip_no = t.trip_no
        LEFT JOIN city c ON t.city_code = c.city_code
        WHERE
        b.boardtype_no = 1
        AND (b.board_title LIKE CONCAT('%', #{search}, '%') -- 제목
        OR b.board_content LIKE CONCAT('%', #{search}, '%') -- 내용
        OR u.user_nickname LIKE CONCAT('%', #{search}, '%') -- 닉네임
        OR c.city_name LIKE CONCAT('%', #{search}, '%')) -- 장소
    </select>

</mapper>
