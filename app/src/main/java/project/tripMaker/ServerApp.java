/*
 * This source file was generated by the Gradle 'init' task
 */
package project.tripMaker;

import org.apache.catalina.WebResourceRoot;
import org.apache.catalina.connector.Connector;
import org.apache.catalina.core.StandardContext;
import org.apache.catalina.startup.Tomcat;
import org.apache.catalina.webresources.DirResourceSet;
import org.apache.catalina.webresources.StandardRoot;

import java.io.File;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.ApplicationContext;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.PropertySource;
import org.springframework.scheduling.annotation.EnableScheduling;
import org.springframework.stereotype.Controller;
import org.springframework.transaction.annotation.EnableTransactionManagement;
import org.springframework.web.multipart.MultipartResolver;
import org.springframework.web.multipart.support.StandardServletMultipartResolver;
import org.springframework.web.servlet.ViewResolver;
import org.springframework.web.servlet.config.annotation.InterceptorRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;
import org.springframework.web.servlet.view.InternalResourceViewResolver;

@SpringBootApplication
@PropertySource("file:${user.home}/config/ncp.properties")
@EnableTransactionManagement
@EnableScheduling
public class ServerApp implements WebMvcConfigurer {

    @Autowired
    ApplicationContext appCtx;
    // private LoginInterceptor loginInterceptor;

    public ServerApp() {
        // AWS 경고 메시지 로깅 비활성화
//        System.getProperties().setProperty("aws.java.v1.disableDeprecationAnnouncement", "true");
    }

    public static void main(String[] args) {
        SpringApplication.run(ServerApp.class, args);
    }

    // @Override
    // public void addInterceptors(InterceptorRegistry registry) {
    //     // loginInterceptor가 null이 아닌지 확인 후 추가
    //     if (loginInterceptor != null) {
    //         registry.addInterceptor(loginInterceptor).addPathPatterns("/review/view");
    //     } else {
    //         throw new IllegalArgumentException("Interceptor is required");
    //     }
    // }
}
